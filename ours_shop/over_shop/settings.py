"""
Django settings for over_shop project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-flx@g3ts347w&_6)k4nm723j85ii-*fc&lc7y7+d@)j@ijee#6'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # all app that installed
    'django.contrib.humanize',
    'django_render_partial',
    'django_jalali',
    'django_madval',
    

    # all app that we make
    'shop',
    'cart',
    'authentication',

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'over_shop.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, "templates")], 
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'cart.context_processors.cart', # this line of code added for that when we need any class for all of project in all template
                'cart.context_processors.my_flag_processor',
                
            ],
        },
    },
]

DJANGO_EMAIL_APP_PASSWORD = "bjnxzbzvsojzambl"
########################     EMAIL     ########################
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = "smtp.gmail.com"
# EMAIL_USE_SSL = True
# EMAIL_PORT = 465 # SSL
# However, SSL is an older technology that contains some security flaws.
# Transport Layer Security (TLS) is the upgraded version of SSL that fixes existing SSL vulnerabilities.
# TLS authenticates more efficiently and continues to support encrypted communication channels.
# خلاصه این که اس اس ال یه مشکلاتی داشت و ورژن تی ال اس رو دادن که امن تره
EMAIL_USE_TLS = True
EMAIL_PORT = 587 # TLS
EMAIL_HOST_USER = "remaamir90112030@gmail.com"
EMAIL_HOST_PASSWORD = DJANGO_EMAIL_APP_PASSWORD
########################     END EMAIL     ########################

WSGI_APPLICATION = 'over_shop.wsgi.application'
MY_FLAG_DEFAULT = False

# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'fa-ir'

TIME_ZONE = 'Asia/Tehran'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

# command for run and make all file like static and media is "py manage.py collectstatic" but 
# you should make any folder with assets name in project
STATIC_URL = 'static/'

STATICFILES_DIRS = [
    BASE_DIR / "assets",
]

STATIC_ROOT = os.path.join(BASE_DIR, "statics", "static_main")

MEDIA_URL = "/media/"

MEDIA_ROOT = os.path.join(BASE_DIR, "statics", "media_root")

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'